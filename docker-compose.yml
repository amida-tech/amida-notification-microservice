version: '2'
services:
  amida-api:
    build:
      context: .
    # Set environment variables from this file
    env_file:
    - .env

    # Overwrite any env var defined in .env file (if required)
    environment:
    - DEBUG=amida-api-boilerplate:*
    - NOTIFICATION_SERVICE_MONGO_CONNECTION_STRING=mongodb://mongo:27017/amida_notifications_microservice_docker_compose
    - NOTIFICATION_SERVICE_MONGO_USER=user
    - NOTIFICATION_SERVICE_MONGO_PASSWORD=pass
    - NOTIFICATION_SERVICE_MONGO_AUTH_SOURCE=admin
    - NOTIFICATION_SERVICE_PORT=4003

    # Link to containers in another service.
    # Links also express dependency between services in the same way as depends_on,
    # so they determine the order of service startup.
    links:
    - mongo

    # Expose ports [HOST:CONTAINER}
    ports:
    - 4003:4003

    volumes:
      # Mounts the project directory on the host to /app inside the container,
      # allowing you to modify the code without having to rebuild the image.
      - .:/app
      # Just specify a path and let the Engine create a volume.
      # Data present in the base image at the specified mount point will be copied
      # over to the new volume upon volume initialization.
      # node_modules from this new volume will be used and not from your local dev env.

  mongo:
    image: mongo:3.6
    ports:
    - 27017:27017
    environment:
    - MONGO_INITDB_ROOT_USERNAME=user
    - MONGO_INITDB_ROOT_PASSWORD=pass
